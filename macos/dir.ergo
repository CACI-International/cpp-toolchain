targets = [
    arm64-apple-macos
    arm64e-apple-macos
    x86_64-apple-macos
    armv7-apple-ios
    armv7s-apple-ios
    arm64-apple-ios
    arm64e-apple-ios
]

unique = fn array -> {
    set = collection:fold (fn set value -> {^:set, :value = ()}) {} :array
    collection:map (fn {key,^_} -> :key) (collection:entries :set)
}

per-target = fn f -> collection:fold (fn curr i -> {^:curr, :i = f :i}) {} :targets

# Build LLVM
llvm = {
    min-supported-version = match (target-triple:arch target-triple:host) {
        =arm64  = 11.0
        =arm64e = 11.0
        =x86_64 = 10.13
    }

    flags = [
        "-DLIBCXX_INSTALL_LIBRARY=OFF",
        "-DLIBCXX_INSTALL_HEADERS=ON",
        "-DLIBCXX_HIDE_FROM_ABI_PER_TU_BY_DEFAULT=ON",
        "-DLIBCXX_HAS_MERGED_TYPEINFO_NAMES_DEFAULT=OFF", # llvm.org/PR37398
        string:format "-DCMAKE_OSX_DEPLOYMENT_TARGET={}" :min-supported-version
    ]
    build:llvm "building llvm" [clang, lld, libcxx, libcxxabi] :flags
}

# Assemble the toolchain
fn dir -> seq ^[
    [
        fs:create-dir <| path:join :dir scripts
        fs:create-dir <| path:join :dir bin
    ]
    [
        fs:copy :llvm (path:join :dir llvm)
        fs:copy (path:join :script-dir tools.sh) (path:join :dir scripts tools.sh)
    ]
    prepare-toolchain :dir :targets
]
