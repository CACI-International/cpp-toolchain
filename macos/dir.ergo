^std:

targets = [
    arm64-apple-macos
    arm64e-apple-macos
    x86_64-apple-macos
    arm64-apple-ios
    arm64e-apple-ios
]

# Build LLVM
llvm = {
    min-supported-version = match (workspace:target-triple:arch workspace:target-triple:host) ^[
        arm64  -> 11.0
        arm64e -> 11.0
        x86_64 -> 10.13
    ]

    flags = [
        "-DLIBCXX_INSTALL_LIBRARY=OFF",
        "-DLIBCXX_INSTALL_HEADERS=ON",
        "-DLIBCXX_HIDE_FROM_ABI_PER_TU_BY_DEFAULT=ON",
        "-DLIBCXX_HAS_MERGED_TYPEINFO_NAMES_DEFAULT=OFF", # llvm.org/PR37398
        String:format "-DCMAKE_OSX_DEPLOYMENT_TARGET={}" :min-supported-version
    ]
    workspace:build:llvm "building llvm" [clang, libcxx, libcxxabi] :flags
}

# Assemble the toolchain
script-dir = script:dir:
{
    build = fn :dir -> seq ^[
        [
            fs:create-dir <| Path:join :dir libexec wut
            fs:create-dir <| Path:join :dir bin
        ]
        [
            fs:copy :llvm (Path:join :dir libexec wut llvm)
            fs:copy (Path:join :script-dir tools.sh) (Path:join :dir libexec wut tools.sh)
        ]
        workspace:prepare-toolchain :dir :targets
        ()
    ]

    targets
}
