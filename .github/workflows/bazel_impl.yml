name: Test bazel rules

on:
  workflow_call:
    inputs:
      use-built-toolchain:
        type: boolean
      runs-on:
        type: string
        required: true
      host:
        type: string
        required: true
      target:
        type: string
        required: true

jobs:

  test-bazel-rules:

    name: test ${{ inputs.target }} target on ${{ inputs.host }} host
    runs-on: ${{ inputs.runs-on }}
    steps:
      - uses: actions/checkout@v4
      - uses: bazel-contrib/setup-bazel@0.14.0
        with:
          module-root: bazel/test
          bazelisk-cache: true
          disk-cache: false
          repository-cache: false
      - name: Download built toolchain
        uses: actions/download-artifact@v4
        if: ${{ inputs.use-built-toolchain }}
        with:
          pattern: '{llvm-${{ inputs.host }},sysroot-${{ inputs.target }}}'
          merge-multiple: True
      - name: Configure built toolchain
        if: ${{ inputs.use-built-toolchain }}
        run: |
          echo "build --repo_env=PORTABLE_CC_TOOLCHAIN_LLVM=`pwd`/llvm-${{ inputs.host }}.tar.xz" >> ~/.bazelrc
          echo "build --repo_env=PORTABLE_CC_TOOLCHAIN_SYSROOT=`pwd`/sysroot-${{ inputs.target }}.tar.xz" >> ~/.bazelrc
      - name: Build Test
        run: |
          cd bazel/test && bazel build \
              --announce_rc \
              --platforms=@portable_cc_toolchain//platform:${{ inputs.target }} \
              c_binary cpp_binary
      - name: Run Test
        if: ${{ inputs.host == inputs.target }}
        run: |
          cd bazel/test
          bazel-bin/c_binary
          bazel-bin/cpp_binary
