name: Test bazel rules

on:
  workflow_call:
    inputs:
      use-built-toolchain:
        type: boolean
      ref:
        type: string
      runs-on:
        type: string
        required: true
      host:
        type: string
        required: true
      target:
        type: string
        required: true

jobs:

  test-bazel-rules:
    if: ${{ inputs.use-built-toolchain == true || contains(inputs.target, 'musl') == false }}
    name: test ${{ inputs.target }} target on ${{ inputs.host }} host
    runs-on: ${{ inputs.runs-on }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - uses: bazel-contrib/setup-bazel@0.15.0
        with:
          module-root: bazel/test
          bazelisk-cache: true
          disk-cache: false
          repository-cache: false
          bazelrc: |
            startup --windows_enable_symlinks
            build --config=incompatible --announce_rc --platforms=@portable_cc_toolchain//platform:${{ inputs.target }}
      - name: Download built toolchain
        uses: actions/download-artifact@v4
        if: ${{ inputs.use-built-toolchain }}
        with:
          pattern: '{llvm-${{ inputs.host }},sysroot-${{ inputs.target }},compiler-rt-linux}'
          merge-multiple: True
      - name: Configure built toolchain
        if: ${{ inputs.use-built-toolchain }}
        shell: bash
        run: |
          WORKSPACE=$(echo '${{ github.workspace }}' | tr '\\' '/')
          echo "" >> ~/.bazelrc
          echo "build --repo_env=PORTABLE_CC_TOOLCHAIN_LLVM=$WORKSPACE/llvm-${{ inputs.host }}.tar.xz" >> ~/.bazelrc
          echo "build --repo_env=PORTABLE_CC_TOOLCHAIN_SYSROOT=$WORKSPACE/sysroot-${{ inputs.target }}.tar.xz" >> ~/.bazelrc
          echo "build --repo_env=PORTABLE_CC_TOOLCHAIN_COMPILER_RT_LINUX=$WORKSPACE/compiler-rt-linux.tar.xz" >> ~/.bazelrc

      - name: Module Test
        run: cd bazel && bazel test //...
        if: ${{ inputs.host == inputs.target && contains(inputs.host, 'linux') }}

      - name: Build Test (fastbuild)
        run: cd bazel/test && bazel build -c fastbuild //...
      - name: Run Test (fastbuild)
        if: ${{ inputs.host == inputs.target }}
        run: |
          cd bazel/test
          bazel-bin/c_binary
          bazel-bin/cpp_binary

      - name: Build Test (dbg)
        run: cd bazel/test && bazel build -c dbg //...
      - name: Run Test (dbg)
        if: ${{ inputs.host == inputs.target }}
        run: |
          cd bazel/test
          bazel-bin/c_binary
          bazel-bin/cpp_binary

      - name: Build Test (opt)
        run: cd bazel/test && bazel build -c opt //...
      - name: Run Test (opt)
        if: ${{ inputs.host == inputs.target }}
        run: |
          cd bazel/test
          bazel-bin/c_binary
          bazel-bin/cpp_binary
