name: Test bazel rules

on:
  workflow_call:
    inputs:
      use-built-toolchain:
        type: boolean
      ref:
        type: string

jobs:

  test-cmake-rules:
    name: generate version info
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - name: Download built toolchain
        uses: actions/download-artifact@v4
        if: ${{ inputs.use-built-toolchain }}
        with:
          pattern: '{llvm-x86_64-unknown-linux-gnu,sysroot-x86_64-unknown-linux-gnu,compiler-rt-linux}'
          merge-multiple: True
      - name: Configure built toolchain
        if: ${{ inputs.use-built-toolchain }}
        shell: bash
        run: |
          echo "PORTABLE_CC_TOOLCHAIN_LLVM=`pwd`/llvm-x86_64-unknown-linux-gnu.tar.xz" >> $GITHUB_ENV
          echo "PORTABLE_CC_TOOLCHAIN_SYSROOT=`pwd`/sysroot-x86_64-unknown-linux-gnu.tar.xz" >> $GITHUB_ENV

      - name: Build
        working-directory: cmake/version
        run: cmake -S . -B build -DCMAKE_TOOLCHAIN_FILE=portable_cc_toolchain/toolchain.cmake && cmake --build build

      - name: Generate version info
        run: cmake/version/build/version | tee version_info.md

      - name: Upload version info
        uses: actions/upload-artifact@v4
        with:
          name: version-info
          path: version_info.md
          if-no-files-found: error
